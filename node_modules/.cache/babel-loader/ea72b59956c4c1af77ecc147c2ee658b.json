{"ast":null,"code":"var _jsxFileName = \"/Users/parth/Documents/GitHub/clicky/src/Components/ImageGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImageGrid = ({\n  error,\n  images\n}) => {\n  _s();\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [images.map((image, index) => {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image.url,\n        className: \"imageGrid\",\n        alt: image.name,\n        onClick: () => {\n          setModalIsOpen(true);\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 24\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: () => setModalIsOpen(false),\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"errorMsg\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ImageGrid, \"d4gKB9FOjUoqrytIak5jiPIqzB0=\");\n\n_c = ImageGrid;\nexport default ImageGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageGrid\");","map":{"version":3,"sources":["/Users/parth/Documents/GitHub/clicky/src/Components/ImageGrid.js"],"names":["React","useState","Modal","ImageGrid","error","images","modalIsOpen","setModalIsOpen","map","image","index","url","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,aAAlB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAuB;AAAA;;AAErC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,KAAD,CAA9C;AAEA,sBACI;AAAA,eACKI,MAAM,CAACG,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC1B,0BAAO;AAAK,QAAA,GAAG,EAAED,KAAK,CAACE,GAAhB;AACH,QAAA,SAAS,EAAC,WADP;AAEH,QAAA,GAAG,EAAEF,KAAK,CAACG,IAFR;AAIH,QAAA,OAAO,EAAE,MAAM;AAAEL,UAAAA,cAAc,CAAC,IAAD,CAAd;AAAsB;AAJpC,SAGEG,KAHF;AAAA;AAAA;AAAA;AAAA,cAAP;AAKH,KANA,CADL,eAQI,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEJ,WAAf;AAA4B,MAAA,cAAc,EAAE,MAAMC,cAAc,CAAC,KAAD,CAAhE;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YARJ,eAWI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBAA2BH;AAA3B;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CApBD;;GAAMD,S;;KAAAA,S;AAsBN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react'\nimport Modal from 'react-modal'\n\nconst ImageGrid = ({ error, images }) => {\n\n    const [modalIsOpen, setModalIsOpen] = useState(false)\n\n    return (\n        <div>\n            {images.map((image, index) => {\n                return <img src={image.url}\n                    className=\"imageGrid\"\n                    alt={image.name}\n                    key={index}\n                    onClick={() => { setModalIsOpen(true) }} />\n            })}\n            <Modal isOpen={modalIsOpen} onRequestClose={() => setModalIsOpen(false)}>\n                <p>hello</p>\n            </Modal>\n            <div className=\"errorMsg\">{error}</div>\n\n        </div >\n    )\n}\n\nexport default ImageGrid\n"]},"metadata":{},"sourceType":"module"}