{"ast":null,"code":"var _jsxFileName = \"/Users/parth/Documents/GitHub/clicky/src/Components/ImageGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImageGrid = ({\n  error,\n  images\n}) => {\n  _s();\n\n  var _images$selectedIndex, _images$selectedIndex2;\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"errorMsg\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), images.map((image, index) => {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image.url,\n        className: \"imageGrid\",\n        alt: image.name,\n        onClick: () => {\n          setModalIsOpen(true);\n          setSelectedIndex(index);\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 24\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: () => setModalIsOpen(false),\n      style: {\n        overlay: {\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          backgroundColor: 'rgba(0, 0, 0, 0.8)'\n        },\n        content: {\n          display: 'absolute',\n          maxWidth: '100%',\n          maxHeight: '80%',\n          margin: '60px auto',\n          boxShadow: '3px 5px 7px rgba(0,0,0,0.5)',\n          border: '3px solid white',\n          borderRadius: '20px'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: (_images$selectedIndex = images[selectedIndex]) === null || _images$selectedIndex === void 0 ? void 0 : _images$selectedIndex.url,\n        alt: (_images$selectedIndex2 = images[selectedIndex]) === null || _images$selectedIndex2 === void 0 ? void 0 : _images$selectedIndex2.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ImageGrid, \"A6Awjrc/kcXCYOirLQ8jNMap0BU=\");\n\n_c = ImageGrid;\nexport default ImageGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageGrid\");","map":{"version":3,"sources":["/Users/parth/Documents/GitHub/clicky/src/Components/ImageGrid.js"],"names":["React","useState","Modal","ImageGrid","error","images","modalIsOpen","setModalIsOpen","selectedIndex","setSelectedIndex","map","image","index","url","name","overlay","position","top","left","width","height","backgroundColor","content","display","maxWidth","maxHeight","margin","boxShadow","border","borderRadius"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,aAAlB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAuB;AAAA;;AAAA;;AAErC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,IAAD,CAAlD;AAEA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBAA2BG;AAA3B;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKC,MAAM,CAACK,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC1B,0BAAO;AAAK,QAAA,GAAG,EAAED,KAAK,CAACE,GAAhB;AACH,QAAA,SAAS,EAAC,WADP;AAEH,QAAA,GAAG,EAAEF,KAAK,CAACG,IAFR;AAIH,QAAA,OAAO,EAAE,MAAM;AACXP,UAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,UAAAA,gBAAgB,CAACG,KAAD,CAAhB;AACH;AAPE,SAGEA,KAHF;AAAA;AAAA;AAAA;AAAA,cAAP;AASH,KAVA,CAFL,eAaI,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEN,WAAf;AAA4B,MAAA,cAAc,EAAE,MAAMC,cAAc,CAAC,KAAD,CAAhE;AACI,MAAA,KAAK,EAAE;AACHQ,QAAAA,OAAO,EAAE;AACLC,UAAAA,QAAQ,EAAE,OADL;AAELC,UAAAA,GAAG,EAAE,CAFA;AAGLC,UAAAA,IAAI,EAAE,CAHD;AAILC,UAAAA,KAAK,EAAE,MAJF;AAKLC,UAAAA,MAAM,EAAE,MALH;AAMLC,UAAAA,eAAe,EAAE;AANZ,SADN;AASHC,QAAAA,OAAO,EAAE;AACLC,UAAAA,OAAO,EAAE,UADJ;AAELC,UAAAA,QAAQ,EAAE,MAFL;AAGLC,UAAAA,SAAS,EAAE,KAHN;AAILC,UAAAA,MAAM,EAAE,WAJH;AAKLC,UAAAA,SAAS,EAAE,6BALN;AAMLC,UAAAA,MAAM,EAAE,iBANH;AAOLC,UAAAA,YAAY,EAAE;AAPT;AATN,OADX;AAAA,6BAqBI;AAAK,QAAA,GAAG,2BAAExB,MAAM,CAACG,aAAD,CAAR,0DAAE,sBAAuBK,GAAjC;AAAsC,QAAA,GAAG,4BAAER,MAAM,CAACG,aAAD,CAAR,2DAAE,uBAAuBM;AAAlE;AAAA;AAAA;AAAA;AAAA;AArBJ;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyCH,CA9CD;;GAAMX,S;;KAAAA,S;AAgDN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react'\nimport Modal from 'react-modal'\n\nconst ImageGrid = ({ error, images }) => {\n\n    const [modalIsOpen, setModalIsOpen] = useState(false)\n    const [selectedIndex, setSelectedIndex] = useState(null)\n\n    return (\n        <div>\n            <div className=\"errorMsg\">{error}</div>\n            {images.map((image, index) => {\n                return <img src={image.url}\n                    className=\"imageGrid\"\n                    alt={image.name}\n                    key={index}\n                    onClick={() => {\n                        setModalIsOpen(true);\n                        setSelectedIndex(index);\n                    }} />\n\n            })}\n            <Modal isOpen={modalIsOpen} onRequestClose={() => setModalIsOpen(false)}\n                style={{\n                    overlay: {\n                        position: 'fixed',\n                        top: 0,\n                        left: 0,\n                        width: '100%',\n                        height: '100%',\n                        backgroundColor: 'rgba(0, 0, 0, 0.8)'\n                    },\n                    content: {\n                        display: 'absolute',\n                        maxWidth: '100%',\n                        maxHeight: '80%',\n                        margin: '60px auto',\n                        boxShadow: '3px 5px 7px rgba(0,0,0,0.5)',\n                        border: '3px solid white',\n                        borderRadius: '20px',\n\n                    }\n                }}>\n                <img src={images[selectedIndex]?.url} alt={images[selectedIndex]?.name} />\n            </Modal>\n\n\n        </div >\n    )\n}\n\nexport default ImageGrid\n"]},"metadata":{},"sourceType":"module"}